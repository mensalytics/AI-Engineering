GOOGLE CLOUD PLATFORM NOTES FOR DATA ENGINEERING and Machine Learning 

1. UNDERSTANDING CLOUD 
some history on cloud computing and computer 
your laptop has CPU, RAM, HARD DISK, network interface card connecting to relevant internet service provider 
Google cloud offers COMPUTE ENGINE. 
can build self managed virtual machines in Google Cloud. 


MANAGING RESOURCES IN GOOGLE CLOUUD 
You can use Google cloud shell to manage all resources in google cloud platform 
Tools provided to manage resources in the command line is 
a. gsutil => GOOGLE CLOUD STORAGE SERVICES 
b. bq => bigquery services 
c. kubectl => kubernetes services 


GCP NETWORKING 
without networking, computer cannot connect to the outside world and you will not enjoy the things you enjoy now. 
with GCP, a cloud network called VPC(VIRTUAL PRIVATE CLOUD) is used. 
This is a software based logical network resource 
within a GCP project a number of these VPCs can be provisioned 
After launching VMs,  you can connect them within a VPC or isolate them from each other in seperate VPCs 
VPCs are global, so can be provisioned anywhere in the world. 
within a VPC is a public subnet which has VMs with external IP addresses that are accessible from the internet and can access the internet 
private subnets contain VMs that do not have external IP Addresses. 
VPCs can be peered with each other within a GCP project or outside a GCP project. 

2. HOW TO CREATE FIRST GCP PROJECT 
Each GCP project has a PROJECT NAME AND PROJECT ID. 
This is a default project name and when you spin up your own GCP, you will see a different default project name 
You can then make your customised project. 
PROJECT NAME => My First Project
PROJECT ID => calm-athlete-375514
3. USING THE CLOUD SHELL
The cloud shell is like the terminal you use on your favorite coding editor 
You can open editor in Google cloud, create a program and run it in google cloud platform. 

4. VM BASED VS MANAGED SERVICES VS SERVERLESS SERVICES 
Before we delive into this. The goal is to use products that are configured and maintained by service provider(GOOGLE). 
There are three approaches to using managed services in google cloud platform 
1. VM BASED 2. MANAGED SERVICES 3. SERVERLESS(FULLY MANAGED SERVICES) 
VM BASES => VIRTUAL MACHINE which is compute engine. You need to install software yourself. 
This is a viable option because not all softwares are install in Google Cloud Platform. 

2. Managed Services: This means google manages the software for you. No need to install an OS. 
A typical example is if i wanted to use hadoop in gcp. i need to spin up a VM 
Install Hadoop and then use it. 
The hadoop alternative which is a managed service is Dataproc. No installations needed and google manages everything 
for you. But as a user, you might still need to configure the machine size, networks etc 

3. SERVERLESS: Means simply use it. ie Bigquery. You do not need to set up anything 
so in conclusion the main differences between these are 
VM BASED You manage virtual machines, applications and develop whatever service you want. 
MANAGED SERVICE, You manage applications and develop the service you want. 
FULLY MANAGED SERVICE, you just develop the service you want. 

SCENARIOS 
AS A DATA ENGINEER, i want to process and store csv data 

solution 1: 
a. provision multiple vm instances in gcp using compute engine 
configure the vm networks, os, packages and any infrastructures necessary. 
b. install hadoop cluster on top of the compute engine instances. 
choose any hadoop version you like 
c. store data in HDFS and create a hive table on top of the cluster 

solution 2: 
a. spin up and enable dataproc 
b. store data in hdfs and create a hive table on top of the hadoop cluster 

solution 3: 
a. store the data in bigquery which is a fully managed service for data warehouse. 



5. GOOGLE CLOUD ANALYTICS TOOLS 
We will be focusing on analytics and machine learning tools. 
Google Cloud Big data ana analytics services are 
a. Cloud Dataproc 
This is built on the concept of Map-Reduce and Hadoop systems architecture. 
This is a managed GCP service for processing large datasets. 
Organisations can provision clusters of varying sizes. 
It can be used to process, transform and understand large quantities of data. 
It can be used to run apache spark, flink, presto etc 
It can also be used for data lake mordinzation, etl processes and etc 
b. Cloud dataflow 
This is also a managed service for developing and executing a wide variety of data processing tasks ie ETL batch and streaming jobs. 
This is a serverless service that runs jobs written in apache beam. There is a sequence of steps for reading, transforming and writing out data. 
Pipeline consists of a series of steps, which is a way to connect compoenents to next step. 
When jobs are executed, dataflow spins up a cluster of VMs, distributes the job tasks to the VMs and scales the cluster based on the job loads and performance. 
c. BigQuery 
This an enterprise datawarehouse service which is scalable, fast and optimised for data analytics. 
1. it supports standard sql queries. 
2. It is serverless. 
3. It integrates well with other GCP services. 
4. Manage and analyse your data with built in ML, geo spatial analysis and BI. 
d. Cloud Pub/sub 
This implements an event/message queue pipe to integrate services and parallelise tasks. 
With pub/sub service, you can create event producers(publishers) and consumers called subscribers. 
ie After an object is uploaded into Google cloud storage bucket, 
a request can be generated and sent to PUB/SUB which can trigger an email notification and cloud function to process the object. 
e. Datastream 
This is a serverless data replication service. This allows to easily replicate data from relational databases ie oracle into bigquery directly. 
It supports streaming changes from oracle, mysql, postgressql databases into cloud storage. 
It also offers streamlined integration by using dataflow templates to build custom workflows to replicate databases into cloud sql or cloud spanner for database synchronisation. 
f. Dataplex 
There are datawarehouses, datalakes and data marts. 
This is a unified data management tool to automate data management. 
enables organisations to centrally discover, manage, monitor and govern data accross data lakes, data warehouses and data marts. 

g. Looker 
Business intelligence tool for data analytics. Helps explore, share and visualise organisations data to make better business decisions. 
You can use looker to build dashboards for your business. 
i. Dataprep 
This is a data preprocessing tool for exploring, cleaning and preparing structured or unstructured data for analysis, reporting and machine learning. 
j. Data fusion 
This is a fully managed visual click interface for creating and deploying ETL/ELT data pipelines. 
This is an alternative no code data integeration service. 
You can move data from onpremise to cloud using this tool. 
k. Cloud Composer 
This is a fully managed workflow orchestration service, enabling to create,schedule and manage workflows that span accross cloud and on premise data. 
This is built on popular apache airflow and will be investigated in depth and operates using python programming language. 



COMPUTE SERVICES IN GOOGLE CLOUD PLATFORM 
The whole GCP compute tools are 
1. Google Compute Engine 
Images provide the base operating environment for apps that run in compute engine(VMs) 
GCE offers different pricing models. ie Pay as you model, committed usage, premptive and sole tenant host. 
Pay as you go is for businesses that need provision on the fly 
if workload is foreseeable, then we use committed usage
if the workload can be restarted then we want to leverage the premptive model 


Load Balances and Managed Instanced Groups 
Single Computer may be down due to hardware and software failures. 
It does not provide any scaling when computing demands are changed along the timeline. 
GCP provides load balancers and managed instance groups. 
This allows to us to create homogenous groups of instances so that load balancers can direct traffic 
to more than one VM instance. 
MIG offers auto scaling and auto healing. 
This lets you deal with spikes in traffic by configuring appriopriate minimum and maximum 
instances in the autoscaling policy and scaling the number of VM instances up and down based on specific signals 
whilst auto healing performs health checks and if necessary recreate unhealthy instances. 


2. Google Cloud Kubernetes Engine 
Instead of launching a VM to run an application, we package the app 
into a standard unit that contains everything to run the app or service. 
Build the package into a docker image. 
A container is a running instance of a docker image. 
Docker image virtualises an operating system into app containers. 
As more and more apps are containerised. 
A container management system is necessary where GKE cluster consists of one 
control pane with multiple worker machines called nodes, who work 
together to manage/orchestrate the containers. 
Kubernetes pod is a group of containers that are deployed together and work 
together to complete a task 
ie app server pod containers three seperate containers; 
the app server itself, monitoring containers and a logging containers. 

3. Cloud Run 
Managed compute platform that enables you to run stateless containers that can be 
invoked via HTTP requests. Cloud run is serverless. 
Can build your applications in any language using whatever frameworks and tools. 
Deploy them in seconds without having to manage the server infrastructure. 


4. Google App Engine 
Platform as a service 
used for web app backends, mobile app backends. 
When an app needs to communicate with services or APIs 
Use this as a solution. 
This is a fully managed service and you can build your app in popular programming 
languages ie Java, Python & Golang.  


5. Cloud Functions 
Serverless compute service that allows you submit your code written in 
languages. Google will run the code in the backend and deliver results to you. 
Do not know and do not care where the code was run. Only charged for the time 
your code runs on GCP. 
Leveraging cloud functions, piece of code can triggered within a few milliseconds 
based on certain events. 
ie after an object is uploaded to GCS bucket. 
message can be generated and sent to GCP PUB/SUB 
which will cause cloud functions to process the object. 
It can be triggered based on HTTP endpoints you define or by events in 
Firebase mobile apps. 

Differences between Google App Engine, Cloud Functions & Cloud Run. 
App engine supports many different devices within a single app. 
Cloud run supports individualised services. 
if requirements dont include multiple services then cloud functions is good choice. 
ie saving or extracting data from a database, doing some validatimg 
then use cloud functions.
App Engine, data is shared among instances. But a function is invoked with 
cloud functions, its on its own so you need to keep track of data when 
using cloud functions, you will need to use a database. 
Cloud functions are for lightweight, standaline pieces of functionality.
App engine is suited for apps with numerous pieces of functionality in 
interelated or unrelated ways. 

ie cloud functions 
Main uses 
1. Data Processing/ETL => Listen and respond to cloud storage events. 
2. Mobile backends => compose apps from lightweight loosely coupled bits of logic. 
Cloud Functions supports a single request at a time for each cloud function 
instance. 
Cloud run is able to handle multiple requests at the same time and is able to 
scale up based on demand. 

App Engine 
Highly scalable apps 
use cases 
Web Apps 
Scalable Mobile backends => seamless integration with firebase provides easy to use 
front end mobile platform along with scalable and reliable backend. 

Cloud run can scale stateless containers and leverage google kubernetes engine. 
If you need a serverless option that needs an app to run in a stateless 
container. 
Deploy a service in a single containerise app 
Google handles server management and scalability. 
It comes into play when further customisation is required ie 
embedding AI models or serving multiple interfaces for a longer period of time. 






WHAT IS VM BASED, SERVERLESS,MANAGED & FULLY MANAGED(SERVERLESS) IN GOOGLE CLOUD PLATFORM ?? 
These are the three groups of services in google cloud platform. 
Managed service is a term for products & services that is managed and configured 
and maintained by the service provider. 
If you want to use an IT product, you simply use it. Google manages the software 
for you. You do not install any operating system and no software dependencies or 
carry out maintenance. 
A VM based approach is to use Google managed virtual machines which is called 
Compute Engine. No need to buy own machine and install the OS but you will need to 
install the software yourself. This is a viable option because not all services that 
will fit your business or project are available in Google Cloud Platform. 
A serverless service means simply use it. You just use the software instantly. You do not need to 
set up anything to use the software.

VM BASED APPROACH 
You do not manage physical infrastructure 
You will manage virtual machines 
You will manage the application service 
You will develop the solution on top of the service 


MANAGED SERVICE 
You do not manage physical infrastructure 
You do not need to manage virtual machines 
You will manage the application service 
You will develop the solution on top of the service 

FULLY MANAGED SERVICE OR SERVERLESS 
You do not manage physical infrastructure 
You do not need to manage virtual machines 
You do not need to manage the application service 
You will develop the solution on top of the service 








7. STORAGE IN GOOGLE CLOUD 
The whole storage resources in Google cloud are 
1. Cloud Storage 
Store any amounts of data and retrieve it as often as you like 
ie Images, web asset libraries & as data lakes 
Also used as backups, media archives, long tail content, regulation and compliance requirements 
Block Storage 
2. Persistent Disks 
Block Storage service which is fully integrated with Google Cloud products like Compute Engine and GKE 
IE Disks for virtual machines, share read only data accross multiple VMs 
Rapid and reliable backups of running virtual machines 
storage for databases 

Local SSD => flash optimised databases, hot caching layer for analytics, application scratch disks 

2. File store for file storage 
fully managed service for file migration and storage. Easily mount files shares on compute engine VMs 
for Data analytics, rendering and media processing, application migrations and web content management 
3. Appliances 
Server to collect and physically move data from field locations with limited connectivity or from data services 
for transfer data for archival, migrations or analytics 
capture sensor data for ml or analysis 
move data from bandwidth - constrained locations 
4. Data Transfer 
tools to help perform data transfer from on prem or other cloud provider. 
collecting research data, moving ML training datasets or migrating S3 to Google Cloud 

5. Backup and disaster recovery 
6. Mobile app services 
Cloud storage for firebase 
for user generated content 
uploads over mobile netrowkrs 





8. STORAGE(STRUCTURED) IN GOOGLE CLOUD PLATFORM 
1. Bigtable 
Heavy read + write events 
ie personalisation, adtech, recommendation engines, fraud detection 
2. Datastore 
Datastore is a highly scalable NOSQL DATABASES for your applications 
Datastore automatically handles sharding and replication, providing you with a highly
available and durable datasets that scales automatically to handle your app load. 
3. CLOUD SQL 
general purpose SQL DB 
web frameworks, erp, crm, ecommerce and web & saas applications 
5. CLOUD SPANNER 
RDMS 
ie gaming, global financial ledger & supply chain inventory management 
6. CLOUD FIRESTORE 
large scale complex hierachical data 
ie mobile/web/iot applications, real time sync, offline sync, personalised apps 


The relational databases are Cloud sql, cloud spanner and bare metal 
Non relational databases are firestore and cloud bigtable 
What are non relational databases? 
Non-relational databases can store a variety of unstructured data such as documents, key-value, graphs, wide columns, and more.
In memory is memorystore. 

Qualities that make NOSQL databases fast ? 
Typically, they are optimized for a specific workload pattern (i.e., key-value, graph, wide-column)
Horizontal scaling, usually using range or hashed distributions
Eventual consistency: many NoSQL stores usually exhibit consistency at some later point (e.g., lazily at read time). 
However, Firestore uniquely offers strong global consistency.
Transactions:  a majority of NoSQL stores don't support cross shard transactions or flexible isolation modes. 
However, Firestore uniquely offers ACID transactions across shards with serializable isolation.

RELATIONAL VS NON RELATIONAL DATABASES ?? 
Relational database by linking information from multiple tables through the use of keys. 
A key is a unique identifier which can be assigned to a row of data contained within a table. 




9.UNSTRUCTURED IN GOOGLE CLOUD PLATFORM 
CLOUD STORAGE 
BLOCK STORAGE / PERSISTENT DISKS 
FILESTORE 


8. AI SERVICE IN GOOGLE CLOUD PLATFORM 
1. VERTEX AI 
Build, deploy, and scale machine learning (ML) models 
faster, with fully managed ML tools for any use case. 

3. DOCUMENT AI  



6. USER ACCOUNT VS SERVICE ACCOUNTS 
User account is your personal account as a human user. 
Service account is an account that will be used by non humans. 
Non humans, ie to automate solutions in order to do that 
machines should do tasks 
ie triggering jobs, docker images, running python scripts etc 
Using cloud composer to orchestrate ETL load from Google cloud storage to bigquery 



15. BILLINGS AND HOW TO BE EFFICIENT IN GOOGLE CLOUD PLATFORMS X
